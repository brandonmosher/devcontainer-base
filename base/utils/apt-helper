#!/bin/bash

# Runs updates/install/upgrade/cleanup tasks for docker

RUN_STAGES=()
SKIP_STAGES=()
PACKAGES=()
while [[ $# -gt 0 ]]; do
  key="$1"
  case $key in
    --update|--install|--upgrade|--clean)
        RUN_STAGES+=("${1:2}")
        shift # past argument
        ;;
    --no-update|--no-install|--no-upgrade|--no-clean)
        SKIP_STAGES+=("${1:5}")
        shift # past argument
        ;;
    *)    # unknown option
      PACKAGES+=("$1") # save it in an array for later
      shift # past argument
      ;;
  esac
done

IMPLICIT_ALL=

run () {
    (([[ -n ${IMPLICIT_ALL} ]] || [[ " ${RUN_STAGES[*]} " =~ " ${1} " ]]) && (! [[ " ${SKIP_STAGES[*]} " =~ " ${1} " ]])) && return 0
    return -1
}

if run install && [[ ${#PACKAGES[@]} -eq 0 ]]; then
    echo "usage: apt-helper [--update] [--install] [--upgrade] [--clean] [package names]"
    exit 1
fi

if [[ ${#RUN_STAGES[@]} -eq 0 ]]; then
    echo "Implicitly performing all non-specified operations..."
    IMPLICIT_ALL=true
fi

set -- "${PACKAGES[@]}"

if run update; then
    echo "Updating..."
    apt-get update
    # if [[ -n $(find /var/lib/apt/lists/ -maxdepth 0 -empty) ]]; then
    #     echo "Updating..."
    #     apt-get update
    # else
    #     echo "Already updated."
    # fi
fi

if run install; then
    echo "Installing..."
    DEBIAN_FRONTEND=noninteractive apt-get install -y "$@"
fi

if run upgrade; then
    echo "Upgrading..."
    DEBIAN_FRONTEND=noninteractive apt-get dist-upgrade -y
fi

if run clean; then
    echo "Cleaning..."
    apt-get clean autoclean
    apt-get autoremove -y
    rm -rf /var/lib/apt/lists/*
    rm -rf /tmp/*
fi
